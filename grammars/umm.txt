PROGRAM -> FDECLS DECLARATIONS STATEMENT_SEQ t_.
FDECLS -> FDEC t_; FDECLS
FDECLS -> ''
FDEC -> t_def TYPE FNAME t_( PARAMS t_) DECLARATIONS STATEMENT_SEQ t_fed
PARAMS -> TYPE VAR PARAM_OPT 
PARAMS -> ''
PARAM_OPT -> t_, PARAMS
PARAM_OPT -> ''
FNAME -> ID
DECLARATIONS -> DECL t_; DECLARATIONS
DECLARATIONS -> ''
DECL -> TYPE VARLIST
TYPE -> t_kw_int
TYPE -> t_kw_double
VARLIST -> VAR VARLIST_P
VARLIST_P -> t_, VARLIST
VARLIST_P ->  ''
STATEMENT_SEQ -> STATEMENT t_; STATEMENT_SEQ
STATEMENT_SEQ -> ''
STATEMENT -> VAR t_= EXPR
STATEMENT -> t_if EXPR t_then STATEMENT_SEQ STREPLC_P t_fi
STATEMENT -> t_while EXPR t_do STATEMENT_SEQ t_od
STATEMENT -> t_print EXPR
STATEMENT -> t_return EXPR
STATEMENT -> ''
STREPLC_P -> t_else STATEMENT_SEQ
STREPLC_P -> ''
EXPR -> TERM EXPR_P
EXPR_P -> t_+ TERM EXPR_P
EXPR_P -> t_- TERM EXPR_P
EXPR_P -> t_or TERM EXPR_P
EXPR_P ->  ''
TERM -> FACTOR TERM_P
TERM_P -> t_* FACTOR TERM_P
TERM_P -> t_/ FACTOR TERM_P
TERM_P -> t_% FACTOR TERM_P
TERM_P -> t_and FACTOR TERM_P
TERM_P -> ''
FACTOR -> ID FUNCOPTS         
FACTOR -> NUMBER
FACTOR -> t_( EXPR t_)
FUNCOPTS -> t_( EXPRSEQ t_) 
FUNCOPTS -> ''
EXPRSEQ -> EXPR EXPRSEQ_P
EXPRSEQ -> ''
EXPRSEQ_P -> t_, EXPRSEQ
EXPRSEQ_P -> ''
COMP -> t_> COMP_P_P
COMP -> t_< COMP_P
COMP -> t_= t_=
COMP_P -> ''
COMP_P -> t_=
COMP_P -> t_>
COMP_P_P -> ''
COMP_P_P -> t_=
VAR -> ID VAR_P
VAR_P -> ''
VAR_P -> t_[ EXPR t_]
ID -> t_id
NUMBER -> INT DECIMAL
DECIMAL-> t_. INT EXOPT
DECIMAL-> ''
EXOPT-> t_exp NUMBER
EXOPT-> ''
INT -> t_num
INT ->  t_- t_num